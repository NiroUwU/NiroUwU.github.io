nimTitle	locations	website/locations.html	module website/locations		0
nim	convert	website/locations.html#convert,Description	proc convert(desc: Description): seq[HtmlElement]		13
nim	has	website/locations.html#has,Location,LocationImageType	proc has(location: Location; img: LocationImageType): bool		23
nim	getLocationImage	website/locations.html#getLocationImage,Location,LocationImageType	proc getLocationImage(location: Location; img: LocationImageType): HtmlElement		30
nim	generateLocationMap	website/locations.html#generateLocationMap,Location	proc generateLocationMap(location: Location)		54
nim	getLocationMapPath	website/locations.html#getLocationMapPath,Location,bool	proc getLocationMapPath(location: Location; absolute: bool = false): string		58
nim	setOgImage	website/locations.html#setOgImage,HtmlDocument,Location	proc setOgImage(html: var HtmlDocument; location: Location)		64
nim	generateLocationHtml	website/locations.html#generateLocationHtml,Location	proc generateLocationHtml(location: Location)		91
nim	generateLocations	website/locations.html#generateLocations,seq[Location]	proc generateLocations(locations: seq[Location])		212
heading	Locations module	website/locations.html#locations-module	 Locations module		0
